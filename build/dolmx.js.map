{"version":3,"file":"dolmx.js","sources":["../src/main.js"],"sourcesContent":["function trimStr(str) {\n  return (str || '').replace(/^([^\\w]|\\s)+/g, '').replace(/([^\\w]|\\s)+$/g, '')\n}\n\nfunction trimQuote(str) {\n  return trimStr(str).replace(/^(\"|')(.*)\\1$/, '$2');\n}\n\nfunction formatAttr(attr) {\n  const attrObj = {};\n  trimStr(attr).split(/['\"]\\s+/).forEach(itemOrigin => {\n    const item = trimStr(itemOrigin);\n    if (!item) return;\n    const tmp = item.split(/=['\"]/);\n    const key = trimStr(tmp[0]);\n    if (!key) return;\n    attrObj[key] = trimQuote(tmp[1]) || true;\n  });\n  return attrObj;\n}\n\nexport default function dolmx(xmlstring) {\n  const reg = /^<\\??([a-z][\\w\\:\\.\\-]*)(\\s[^>]*?)?[\\/\\?]>|^<([a-z][\\w\\.\\-]*)(\\s.*?)?>((?:(?!<\\3).)*)<\\/\\3>|^<([\\w\\-]+)(\\s+.*?)?>((?:<\\6.*?<\\/\\6>|<\\6[^>]*?\\/>|(?:(?!<\\6).)*)*)<\\/\\6>/igm;\n  const isValueReg = /^<!\\[CDATA\\[(.*?)\\]\\]>$/im;\n  const result = {};\n  let mached;\n  let key;\n  let child;\n  let xmlstr = xmlstring;\n\n  xmlstr = xmlstr.replace(/\\s*\\n+\\s*/gm, '');\n\n  if (!/^</.test(xmlstr)) return { _value: xmlstr };\n\n  if (isValueReg.test(xmlstr)) return { _value: xmlstr.replace(isValueReg, '$1') };\n  mached = reg.exec(xmlstr);\n  while(mached) {\n    xmlstr = xmlstr.substring(0, mached.index) + xmlstr.substring(mached.index +  mached[0].length);\n    reg.lastIndex = 0;\n\n    if (mached[1]) {\n      key = trimStr(mached[1]);\n      child = { _attr: formatAttr(mached[2]) };\n    } else if (mached[3]) {\n      key = trimStr(mached[3]);\n      child = {};\n      if (mached[5]) child = dolmx(mached[5]);\n      child._attr = formatAttr(mached[4]);\n    } else if (mached[6]) {\n      key = trimStr(mached[6]);\n      child = {};\n      if (mached[8]) child = dolmx(mached[8]);\n      child._attr = formatAttr(mached[7]);\n    }\n    if (result[key]) {\n      if (!Array.isArray(result[key])) {\n        result[key] = [result[key]];\n      }\n      result[key].push(child);\n    } else {\n      result[key] = child;\n    }\n    mached = reg.exec(xmlstr);\n  }\n  return result;\n}"],"names":["trimStr","str","replace","trimQuote","formatAttr","attr","attrObj","split","forEach","item","itemOrigin","tmp","key","dolmx","xmlstring","reg","isValueReg","result","mached","child","xmlstr","test","_value","exec","substring","index","length","lastIndex","_attr","Array","isArray","push"],"mappings":"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"}